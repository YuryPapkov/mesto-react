{"version":3,"sources":["images/close-icon.svg","images/logo.svg","components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","alt","src","logoPath","api","userURL","cardsURL","token","this","_userURL","_cardsURL","_token","fetch","method","headers","authorization","then","res","ok","json","Promise","reject","status","name","about","body","JSON","stringify","link","id","cardDeleteURL","cardLikeURL","url","avatar","Card","card","onCardClick","onClick","type","likes","length","Main","onEditProfile","onAddPlace","onEditAvatar","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","dataDownload","userDownload","cardsDownload","all","data","userData","aria-label","map","item","key","_id","Footer","PopupWithForm","title","submitText","isOpen","onClose","children","action","noValidate","closeButtonPath","ImagePopup","Object","keys","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","closeAllPopups","required","minLength","maxLength","autoComplete","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ea79700c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close-icon.c2d0901f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";","import React from 'react';\r\nimport logoPath from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\" >\r\n    <img className=\"logo\"  alt=\"Место в России\" src={logoPath}/> \r\n    </header>\r\n  );\r\n}\r\nexport default Header;"," class Api {\r\n     constructor({ userURL, cardsURL, token }) {\r\n         this._userURL = userURL;\r\n         this._cardsURL = cardsURL;\r\n         this._token = token;\r\n     }\r\n     userDownload() {\r\n         return fetch(this._userURL, {\r\n                 method: 'GET',\r\n                 headers: {\r\n                     authorization: this._token\r\n                 }\r\n             })\r\n             .then((res) => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject(`Ошибка загрузки данных пользователя ${res.status}`);\r\n                 }\r\n             });\r\n     }\r\n\r\n\r\n     cardsDownload() {\r\n         return fetch(this._cardsURL, {\r\n                 method: 'GET',\r\n                 headers: {\r\n                     authorization: this._token\r\n                 }\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject(`Ошибка связи с сервером ${res.status}`);\r\n                 }\r\n\r\n             })\r\n     }\r\n\r\n\r\n     profileDataUpload(name, about) {\r\n         return fetch(this._userURL, {\r\n                 method: 'PATCH',\r\n                 headers: {\r\n                     authorization: this._token,\r\n                     'Content-Type': 'application/json',\r\n                 },\r\n                 body: JSON.stringify({\r\n                     name: name,\r\n                     about: about\r\n                 })\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject(`Ошибка загрузки данных пользователя на сервер ${res.status}`);\r\n                 }\r\n             })\r\n     }\r\n     newCardUpload(name, link) {\r\n         return fetch(this._cardsURL, {\r\n                 method: 'POST',\r\n                 headers: {\r\n                     authorization: this._token,\r\n                     'Content-Type': 'application/json',\r\n                 },\r\n                 body: JSON.stringify({\r\n                     name: name,\r\n                     link: link\r\n                 })\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject(`Ошибка загрузки карточки на сервер ${res.status}`);\r\n                 }\r\n             })\r\n     }\r\n\r\n     deleteCard(id) {\r\n         const cardDeleteURL = (this._cardsURL + `/${id}`);\r\n         return fetch(cardDeleteURL, {\r\n                 method: 'DELETE',\r\n                 headers: {\r\n                     authorization: this._token\r\n                 }\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject('Ошибка удаления карточки');\r\n                 }\r\n             })\r\n     }\r\n     likeCard(id) {\r\n         const cardLikeURL = (this._cardsURL + `/likes/${id}`);\r\n         return fetch(cardLikeURL, {\r\n                 method: 'PUT',\r\n                 headers: {\r\n                     authorization: this._token\r\n                 }\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject('Ошибка связи с сервером');\r\n                 }\r\n             })\r\n\r\n     }\r\n     dislikeCard(id) {\r\n         const cardLikeURL = (this._cardsURL + `/likes/${id}`);\r\n         return fetch(cardLikeURL, {\r\n                 method: 'DELETE',\r\n                 headers: {\r\n                     authorization: this._token\r\n                 }\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject('Ошибка связи с сервером');\r\n                 }\r\n             })\r\n     }\r\n     avatarUpload(url) {\r\n         return fetch((this._userURL + `/avatar`), {\r\n                 method: 'PATCH',\r\n                 headers: {\r\n                     authorization: this._token,\r\n                     'Content-Type': 'application/json'\r\n                 },\r\n                 body: JSON.stringify({\r\n                     avatar: url.link,\r\n                 })\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject('Ошибка загрузки аватара');\r\n                 }\r\n             })\r\n     }\r\n }\r\n\r\n const apiConfig = {\r\n     userURL: 'https://mesto.nomoreparties.co/v1/cohort-15/users/me',\r\n     cardsURL: 'https://mesto.nomoreparties.co/v1/cohort-15/cards',\r\n     token: 'e6bf7ea4-0157-47ee-b8f8-bf17d3b13ba1'\r\n }\r\n\r\n const api = new Api(apiConfig);\r\n export default api;","import React from 'react';\r\n\r\nfunction Card({card, onCardClick}) {\r\n    function handleClick(){\r\n        onCardClick(card);\r\n    }\r\n\r\n    return (\r\n        <li className=\"card\">\r\n          <img src={card.link} alt=\"\" className=\"card__image\" onClick={handleClick}/>\r\n          <button className=\"button card__delete-button\" type=\"button\"/>\r\n          <div className=\"card__caption\">\r\n            <h2 className=\"card__title\">{card.name}</h2>\r\n            <div className=\"card__like-container\">\r\n              <button className=\"button card__like-button\" type=\"button\"/>\r\n              <p className=\"card__like-counter\">{card.likes.length}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\nimport api from '../utils/Api.js';\nimport Card from './Card';\n\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick}) {\n    const [userName, setUserName]=React.useState('');\n    const [userDescription, setUserDescription]=React.useState('');\n    const [userAvatar, setUserAvatar]=React.useState('');\n    const [cards, setCards]=React.useState([]);\nReact.useEffect(()=>{\n    const userFromServer = api.userDownload();\n    const cardsFromServer = api.cardsDownload();\n\n    const dataDownload = [userFromServer, cardsFromServer];\nPromise.all(dataDownload)\n    .then((data) => {\n        const userData = data[0];\n        setCards(data[1]);\n        setUserName(userData.name);\n        setUserDescription(userData.about);\n        setUserAvatar(userData.avatar);\n    });\n  },[]);\n    return (\n        <main className=\"content\">\n          <section className=\"profile\">\n            <img src={userAvatar}  alt=\"фото профиля\" className=\"profile__avatar\" onClick={onEditAvatar}/>\n            <div className=\"profile__info\">\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button className=\"button profile__edit-button\" type=\"button\" aria-label=\"Редактировать профиль\" onClick={onEditProfile}/>\n              <p className=\"profile__occupation\">{userDescription}</p>\n            </div>\n            <button className=\"button profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace}/>\n\n          </section>\n          <section>\n            <ul className=\"cards\">\n              {cards.map((item)=>(\n              <Card key={item._id} card={item} onCardClick={onCardClick}/>\n              ))}\n            </ul>\n          </section>\n        </main>\n    );\n}\nexport default Main;\n","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n          <p className=\"footer__copyright\">&copy;2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport closeButtonPath from '../images/close-icon.svg';\r\n\r\nfunction PopupWithForm({title,name,submitText, isOpen, onClose, children}) {\r\n    const className=`popup popup_type_${name} ${isOpen&& 'popup_opened'}`;\r\n    //console.log(children);\r\n    return (\r\n        <div className={className}>\r\n          <form name={name} action=\"#\" className=\"popup__container popup__container_type_input\" noValidate>\r\n            <p className=\"popup__text\">{title}</p>\r\n            {children}\r\n            <button type=\"submit\" className=\"button popup__save-button\">{submitText}</button>\r\n            <button type=\"reset\" className=\"button popup__close-button popup__close-button_type_input\" onClick={onClose}><img src={closeButtonPath} alt=\"закрыть\" /></button>\r\n          </form>\r\n        </div>\r\n    );\r\n}\r\nexport default PopupWithForm;","import React from 'react';\r\nimport closeButtonPath from '../images/close-icon.svg';\r\n\r\n\r\nfunction ImagePopup({card, onClose}) {\r\n  const className= `popup popup_type_image ${(Object.keys(card).length !==0) && 'popup_opened'}`;\r\n    return (\r\n        <div className={className}>\r\n          <div className=\"popup__container popup__container_type_picture\">\r\n            <button className=\"button popup__close-button popup__close-button_type_picture\" type=\"reset\" onClick={onClose}><img src={closeButtonPath} alt=\"закрыть\" /></button>\r\n            <img src={card.link} alt=\"\" className=\"popup__image\" />\r\n            <p className=\"popup__subtitle\">{card.name}</p>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ImagePopup;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\n\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen]=React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen]=React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen]=React.useState(false);\r\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen]=React.useState(false);\r\n  const [selectedCard, setSelectedCard]=React.useState({});\r\n\r\n  function handleEditProfileClick  () {\r\n    setIsEditProfilePopupOpen(true);\r\n  };\r\n  function handleAddPlaceClick ()  {\r\n    setIsAddPlacePopupOpen(true);\r\n  };\r\n  function handleEditAvatarClick () {\r\n    setIsEditAvatarPopupOpen(true);\r\n  };\r\n  function handleCardClick (card) {\r\n    setSelectedCard(card);\r\n  };\r\n  function closeAllPopups (){\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsConfirmPopupOpen(false);\r\n    setSelectedCard({});\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"body\">\r\n        <Header/>\r\n        <Main \r\n          onEditProfile= {handleEditProfileClick} \r\n          onAddPlace={handleAddPlaceClick} \r\n          onEditAvatar= {handleEditAvatarClick}\r\n          onCardClick={handleCardClick}\r\n        />\r\n        <Footer/>\r\n        <PopupWithForm \r\n          title=\"Редактировать профиль\" \r\n          name=\"edit\" \r\n          submitText=\"Сохранить\" \r\n          onClose={closeAllPopups}\r\n          isOpen={isEditProfilePopupOpen} \r\n        >\r\n          <input \r\n            name=\"name\" \r\n            className=\"popup__input popup__input_type_name\" \r\n            type=\"text\" \r\n            required \r\n            minLength=\"2\" \r\n            maxLength=\"40\" \r\n            autoComplete=\"off\" \r\n          />\r\n          <span className=\"popup__error popup__error_type_name\"></span>\r\n          <input \r\n            name=\"occupation\" \r\n            className=\"popup__input popup__input_type_occupation\" \r\n            type=\"text\" \r\n            required \r\n            minLength=\"2\" \r\n            maxLength=\"200\" \r\n            autoComplete=\"off\" \r\n          />\r\n          <span className=\"popup__error popup__error_type_occupation\"></span>\r\n        </PopupWithForm>\r\n        \r\n        <PopupWithForm \r\n          title=\"Новое место\" \r\n          name=\"new-card\" \r\n          submitText=\"Сохранить\" \r\n          onClose={closeAllPopups}\r\n          isOpen={isAddPlacePopupOpen} \r\n        >\r\n          <input \r\n            name=\"place\" \r\n            className=\"popup__input popup__input_type_place\" \r\n            type=\"text\" \r\n            placeholder=\"название\" \r\n            required \r\n            minLength=\"1\" \r\n            maxLength=\"30\" \r\n            autoComplete=\"off\" \r\n          />\r\n          <span className=\"popup__error popup__error_type_place\"></span>\r\n          <input \r\n            name=\"link\" \r\n            className=\"popup__input popup__input_type_link\"\r\n            type=\"url\" \r\n            required \r\n            placeholder=\"ссылка на картинку\" \r\n            autoComplete=\"off\" \r\n          />\r\n          <span className=\"popup__error popup__error_type_link\"></span>\r\n        </PopupWithForm>\r\n        \r\n        <PopupWithForm \r\n          title=\"Обновить аватар\" \r\n          name=\"avatar\" \r\n          submitText=\"Сохранить\" \r\n          onClose={closeAllPopups}\r\n          isOpen={isEditAvatarPopupOpen}\r\n        >\r\n          <input \r\n            name=\"link\" \r\n            className=\"popup__input popup__input_type_link\" \r\n            type=\"url\" \r\n            required \r\n            placeholder=\"ссылка на картинку\" \r\n            autoComplete=\"off\" \r\n          />\r\n          <span className=\"popup__error popup__error_type_link\"></span>  \r\n        </PopupWithForm>\r\n\r\n        <PopupWithForm \r\n          title=\"Вы уверены?\" \r\n          name=\"confirm\" \r\n          submitText=\"да\" \r\n          onClose={closeAllPopups}\r\n          isOpen={isConfirmPopupOpen}\r\n        />\r\n        \r\n        <ImagePopup \r\n          card={selectedCard}\r\n          onClose={closeAllPopups}\r\n        />\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}