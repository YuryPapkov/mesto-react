{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","utils/Validator.js","components/EditProfilePopup.js","components/ImagePopup.js","utils/Api.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/ErrorPopup.js","components/App.js","serviceWorker.js","index.js","images/close-icon.svg","images/logo.svg"],"names":["Header","className","alt","src","logoPath","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","onClick","type","name","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","avatar","aria-label","about","map","item","key","Footer","PopupWithForm","title","submitText","isOpen","onClose","onSubmit","children","noValidate","closeButtonPath","Validator","validationData","formElement","this","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_formElement","_getInputList","_getSubmitButtonElement","addEventListener","evt","preventDefault","_setEventListeners","_inputList","forEach","_hideInputError","_toggleSubmitButtonState","_submitButton","_hasInvalidInput","_buttonElement","classList","add","setAttribute","remove","removeAttribute","validity","valid","inputElement","_showInputError","validationMessage","errorElement","_getErrorElement","textContent","errorMessage","inputList","Array","from","querySelectorAll","buttonElement","querySelector","_checkInputValidity","validationConfig","formSelector","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","submitButtonText","setSubmitButtonText","validatorRef","useRef","useEffect","form","document","forms","edit","current","enableValidation","clearErrors","e","required","minLength","maxLength","autoComplete","value","onChange","target","ImagePopup","Object","keys","api","userURL","cardsURL","token","_userURL","_cardsURL","_token","fetch","method","headers","authorization","then","res","ok","json","Promise","reject","status","body","JSON","stringify","id","cardDeleteURL","cardLikeURL","url","EditAvatarPopup","onUpdateAvatar","avatarRef","ref","placeholder","AddPlacePopup","setTitle","setLink","ConfirmPopup","onConfirm","ErrorPopup","message","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","addPlacePopupSubmitButtonText","setAddPlacePopupSubmitButtonText","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","willBeDeletedCard","setWillBeDeletedCard","setErrorMessage","setCurrentUser","setCards","closeAllPopups","dataDownload","userDownload","cardsDownload","all","user","Provider","changeLikeCardStatus","newCard","newCards","c","catch","err","setTimeout","profileDataUpload","newCardUpload","finally","avatarUpload","deleteCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","module","exports"],"mappings":"4OAUeA,MAPf,WACE,OACE,4BAAQC,UAAU,UAClB,yBAAKA,UAAU,OAAQC,IAAI,6EAAiBC,IAAKC,QCJtCC,EADUC,IAAMC,gBCiChBC,MA/Bf,YAA8D,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,aACtCC,EAAaP,IAAMQ,WAAWT,GAC9BU,EAAQN,EAAKO,MAAMC,MAAQJ,EAAYI,IACvCC,EAAyB,qCACCH,EAAQ,8BAAgC,8BAElEI,EAAUV,EAAKW,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQJ,EAAYI,OACrDM,EAAuB,mCAA+BJ,GAAU,6BAUpE,OACI,wBAAIlB,UAAU,QACZ,yBAAKE,IAAKM,EAAKe,KAAMtB,IAAI,GAAGD,UAAU,cAAcwB,QAX1D,WACIf,EAAYD,MAWV,4BAAQR,UAAWiB,EAA2BQ,KAAK,SAASD,QANpE,WACEb,EAAaH,MAMP,yBAAKR,UAAU,iBACb,wBAAIA,UAAU,eAAeQ,EAAKkB,MAClC,yBAAK1B,UAAU,wBACb,4BAAQA,UAAWsB,EAAyBG,KAAK,SAASD,QAbpE,WACEd,EAAWF,MAaH,uBAAGR,UAAU,sBAAsBQ,EAAKW,MAAMQ,YCM7CC,MA9Bf,YAA0G,IAA1FC,EAAyF,EAAzFA,cAAeC,EAA0E,EAA1EA,WAAYC,EAA8D,EAA9DA,aAActB,EAAgD,EAAhDA,YAAauB,EAAmC,EAAnCA,MAAOtB,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aACjFC,EAAcP,IAAMQ,WAAWT,GAErC,OACE,0BAAMJ,UAAU,WACd,6BAASA,UAAU,WACjB,yBAAKE,IAAKU,EAAYqB,OAAQhC,IAAI,sEAAeD,UAAU,kBAAkBwB,QAASO,IACtF,yBAAK/B,UAAU,iBACb,wBAAIA,UAAU,iBAAiBY,EAAYc,MAC3C,4BAAQ1B,UAAU,8BAA8ByB,KAAK,SAASS,aAAW,4HAAwBV,QAASK,IAC1G,uBAAG7B,UAAU,uBAAuBY,EAAYuB,QAElD,4BAAQnC,UAAU,6BAA6ByB,KAAK,SAASS,aAAW,mDAAWV,QAASM,KAG9F,iCACE,wBAAI9B,UAAU,SACXgC,EAAMI,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,CACEC,IAAKD,EAAKrB,IACVR,KAAM6B,EACN5B,YAAaA,EACbC,WAAYA,EACZC,aAAcA,WCjBb4B,MAPf,WACI,OACI,4BAAQvC,UAAU,UAChB,uBAAGA,UAAU,qBAAb,2B,gBCuBKwC,MA1Bf,YAA0F,IAAjEC,EAAgE,EAAhEA,MAAOf,EAAyD,EAAzDA,KAAMgB,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACrE9C,EAAS,2BAAuB0B,EAAvB,YAA+BiB,GAAU,gBACxD,OACE,yBAAK3C,UAAWA,GACd,0BACE0B,KAAMA,EACNmB,SAAUA,EACV7C,UAAU,+CACV+C,YAAU,GACV,uBAAG/C,UAAU,eAAeyC,GAC3BK,EACD,4BACErB,KAAK,SACLzB,UAAU,6BACT0C,GAEH,4BACEjB,KAAK,QACLzB,UAAU,4DACVwB,QAASoB,GACT,yBAAK1C,IAAK8C,IAAiB/C,IAAI,mD,cCvBnCgD,E,WAEJ,WAAYC,EAAgBC,GAAc,oBACxCC,KAAKC,eAAiBH,EAAeI,cACrCF,KAAKG,sBAAwBL,EAAeM,qBAC5CJ,KAAKK,qBAAuBP,EAAeQ,oBAC3CN,KAAKO,iBAAmBT,EAAeU,gBACvCR,KAAKS,YAAcX,EAAeY,WAClCV,KAAKW,aAAeZ,E,+DAIpBC,KAAKY,gBACLZ,KAAKa,0BACLb,KAAKW,aAAaG,iBAAiB,UAAU,SAACC,GAAUA,EAAIC,oBAC5DhB,KAAKiB,uB,oCAGQ,IAAD,OACZjB,KAAKkB,WAAWC,SAAQ,SAAClC,GAAW,EAAKmC,gBAAgBnC,MACzDe,KAAKqB,yBAAyBrB,KAAKsB,iB,iDAI/BtB,KAAKuB,iBAAiBvB,KAAKkB,aAC7BlB,KAAKwB,eAAeC,UAAUC,IAAI1B,KAAKK,sBACvCL,KAAKwB,eAAeG,aAAa,YAAY,KAE7C3B,KAAKwB,eAAeC,UAAUG,OAAO5B,KAAKK,sBAC1CL,KAAKwB,eAAeK,gBAAgB,e,yCAItC,QAAI7B,KAAKkB,WAAWlD,MAAK,SAAAiB,GAAI,OAAKA,EAAK6C,SAASC,W,0CAM9BC,GACdA,EAAaF,SAASC,MACxB/B,KAAKoB,gBAAgBY,GAErBhC,KAAKiC,gBAAgBD,EAAcA,EAAaE,qB,sCAGpCF,GACd,IAAMG,EAAenC,KAAKoC,iBAAiBJ,GAC3CA,EAAaP,UAAUG,OAAO5B,KAAKO,kBACnC4B,EAAaV,UAAUG,OAAO5B,KAAKS,aACnC0B,EAAaE,YAAc,K,sCAGbL,EAAcM,GAC5B,IAAMH,EAAenC,KAAKoC,iBAAiBJ,GAC3CA,EAAaP,UAAUC,IAAI1B,KAAKO,kBAChC4B,EAAaV,UAAUC,IAAI1B,KAAKS,aAChC0B,EAAaE,YAAcC,I,sCAG3B,IAAMC,EAAYC,MAAMC,KAAKzC,KAAKW,aAAa+B,iBAAiB1C,KAAKC,iBAErE,OADAD,KAAKkB,WAAaqB,EACXvC,KAAKkB,a,gDAGZ,IAAMyB,EAAgB3C,KAAKW,aAAaiC,cAAc5C,KAAKG,uBAE3D,OADAH,KAAKwB,eAAiBmB,EACf3C,KAAKwB,iB,uCAGGQ,GAEf,OADqBhC,KAAKW,aAAaiC,cAAlB,6BAAsDZ,EAAa1D,S,2CAIpE,IAAD,OACnB0B,KAAKkB,WAAWC,SAAQ,SAAClC,GACvBA,EAAK6B,iBAAiB,SAAS,WAC7B,EAAK+B,oBAAoB5D,GACzB,EAAKoC,8BAEPpC,EAAK6B,iBAAiB,SAAS,WAC7B,EAAKO,qC,KAMPyB,EAAmB,CACvBC,aAAc,+BACd7C,cAAe,gBACfE,qBAAsB,sBACtBE,oBAAqB,8BACrBE,gBAAiB,0BACjBE,WAAY,wBCTCsC,MAhFf,YAA8D,IAAlCzD,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,QAASyD,EAAgB,EAAhBA,aACrCzF,EAAcP,IAAMQ,WAAWT,GADsB,EAEnCC,IAAMiG,SAAS,IAFoB,mBAEpD5E,EAFoD,KAE9C6E,EAF8C,OAGrBlG,IAAMiG,SAAS,IAHM,mBAGpDE,EAHoD,KAGvCC,EAHuC,OAIXpG,IAAMiG,SAAS,0DAJJ,mBAIpDI,EAJoD,KAIlCC,EAJkC,KAKrDC,EAAevG,IAAMwG,SAuC3B,OArCAxG,IAAMyG,WAAU,WACd,IAAMC,EAAOC,SAASC,MAAMC,KAC5BN,EAAaO,QAAU,IAAIlE,EAAUiD,EAAkBa,GACvDH,EAAaO,QAAQC,qBACrB,IAEF/G,IAAMyG,WAAU,WACdP,EAAQ3F,EAAYc,MACpB+E,EAAe7F,EAAYuB,OAC3BwE,EAAoB,4DACnB,CAAC/F,IAEJP,IAAMyG,WAAU,WACdH,EAAoB,4DACnB,CAAChE,IAwBF,kBAAC,EAAD,CACEF,MAAM,4HACNf,KAAK,OACLgB,WAAYgE,EACZ9D,QAZJ,WACE2D,EAAQ3F,EAAYc,MACpB+E,EAAe7F,EAAYuB,OAC3ByE,EAAaO,QAAQE,cACrBzE,KASEC,SArBJ,SAAsByE,GACpBX,EAAoB,mEACpBW,EAAElD,iBACFiC,EAAa,CACX3E,OACAS,MAAOqE,KAiBP7D,OAAQA,GAER,2BACEjB,KAAK,OACL1B,UAAU,sCACVyB,KAAK,OACL8F,UAAQ,EACRC,UAAU,IACVC,UAAU,KACVC,aAAa,MACbC,MAAOjG,EACPkG,SAvCN,SAAyBN,GACvBf,EAAQe,EAAEO,OAAOF,UAwCf,0BAAM3H,UAAU,wCAChB,2BACE0B,KAAK,aACL1B,UAAU,4CACVyB,KAAK,OACL8F,UAAQ,EACRC,UAAU,IACVC,UAAU,MACVC,aAAa,MACbC,MAAOnB,EACPoB,SAhDN,SAAgCN,GAC9Bb,EAAea,EAAEO,OAAOF,UAiDtB,0BAAM3H,UAAU,gDC5DP8H,MAjBf,YAAwC,IAAlBtH,EAAiB,EAAjBA,KAAMoC,EAAW,EAAXA,QACpB5C,EAAS,iCAA2D,IAA7B+H,OAAOC,KAAKxH,GAAMmB,QAAiB,gBAChF,OACE,yBAAK3B,UAAWA,GACd,yBAAKA,UAAU,kDACb,4BACEA,UAAU,8DACVyB,KAAK,QACLD,QAASoB,GACT,yBAAK1C,IAAK8C,IAAiB/C,IAAI,gDAEjC,yBAAKC,IAAKM,EAAKe,KAAMtB,IAAI,GAAGD,UAAU,iBACtC,uBAAGA,UAAU,mBAAmBQ,EAAKkB,SCgJ7BuG,EADH,I,WA9JR,cAA2C,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAAS,oBACtChF,KAAKiF,SAAWH,EAChB9E,KAAKkF,UAAYH,EACjB/E,KAAKmF,OAASH,E,2DAGd,OAAOI,MAAMpF,KAAKiF,SAAU,CACpBI,OAAQ,MACRC,QAAS,CACLC,cAAevF,KAAKmF,UAG3BK,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,8MAAsDJ,EAAIK,c,sCAO7E,OAAOV,MAAMpF,KAAKkF,UAAW,CACrBG,OAAQ,MACRC,QAAS,CACLC,cAAevF,KAAKmF,UAG3BK,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,sIAA0CJ,EAAIK,c,wCAOnDxH,EAAMS,GACpB,OAAOqG,MAAMpF,KAAKiF,SAAU,CACpBI,OAAQ,QACRC,QAAS,CACLC,cAAevF,KAAKmF,OACpB,eAAgB,oBAEpBY,KAAMC,KAAKC,UAAU,CACjB3H,KAAMA,EACNS,MAAOA,MAGdyG,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,gQAAgEJ,EAAIK,c,oCAI7ExH,EAAMH,GAChB,OAAOiH,MAAMpF,KAAKkF,UAAW,CACrBG,OAAQ,OACRC,QAAS,CACLC,cAAevF,KAAKmF,OACpB,eAAgB,oBAEpBY,KAAMC,KAAKC,UAAU,CACjB3H,KAAMA,EACNH,KAAMA,MAGbqH,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAR,mMAAqDJ,EAAIK,c,iCAKrEI,GACP,IAAMC,EAAiBnG,KAAKkF,UAAL,WAAqBgB,GAC5C,OAAOd,MAAMe,EAAe,CACpBd,OAAQ,SACRC,QAAS,CACLC,cAAevF,KAAKmF,UAG3BK,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAO,+I,2CAKjBK,EAAIpI,GACvB,IAAMsI,EAAepG,KAAKkF,UAAL,iBAA2BgB,GACjD,OAAGpI,EACOsH,MAAMgB,EAAa,CAClBf,OAAQ,SACRC,QAAS,CACLC,cAAevF,KAAKmF,UAG3BK,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAO,kIAI9BT,MAAMgB,EAAa,CAClBf,OAAQ,MACRC,QAAS,CACLC,cAAevF,KAAKmF,UAG3BK,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAO,oI,mCAMtBQ,GACT,OAAOjB,MAAOpF,KAAKiF,SAAL,UAA4B,CAClCI,OAAQ,QACRC,QAAS,CACLC,cAAevF,KAAKmF,OACpB,eAAgB,oBAEpBY,KAAMC,KAAKC,UAAU,CACjBpH,OAAQwH,EAAIlI,SAGnBqH,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAEJC,QAAQC,OAAO,2I,KAY9B,CANM,CACdf,QAAS,uDACTC,SAAU,oDACVC,MAAO,yCCxGGsB,MAhDf,YAA+D,IAApC/G,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAAS+G,EAAkB,EAAlBA,eACpCC,EAAYvJ,IAAMwG,SAClBD,EAAevG,IAAMwG,SAFiC,EAGZxG,IAAMiG,SAAS,0DAHH,mBAGrDI,EAHqD,KAGnCC,EAHmC,KA0B5D,OArBAtG,IAAMyG,WAAU,WACdH,EAAoB,4DACnB,CAAChE,EAAQgE,IAEZtG,IAAMyG,WAAU,WACd,IAAMC,EAAOC,SAASC,MAAMhF,OAC5B2E,EAAaO,QAAU,IAAIlE,EAAUiD,EAAkBa,GACvDH,EAAaO,QAAQC,qBACpB,IAcD,kBAAC,EAAD,CACE3E,MAAM,wFACNf,KAAK,SACLgB,WAAYgE,EACZ9D,QAXJ,WACEgH,EAAUzC,QAAU,GACpBP,EAAaO,QAAQE,cACrBzE,KASEC,SAjBJ,SAAsByE,GACpBX,EAAoB,mEACpBW,EAAElD,iBACFuF,EAAeC,EAAUzC,QAAQQ,QAe/BhF,OAAQA,GAER,2BACEkH,IAAKD,EACLlI,KAAK,OACL1B,UAAU,sCACVyB,KAAK,MACL8F,UAAQ,EACRuC,YAAY,qGACZpC,aAAa,QAEf,0BAAM1H,UAAU,0CCuBP+J,MAnEf,YAA2E,IAAlDpH,EAAiD,EAAjDA,OAAQ+D,EAAyC,EAAzCA,iBAAkB9D,EAAuB,EAAvBA,QAASd,EAAc,EAAdA,WAAc,EAC9CzB,IAAMiG,SAAS,IAD+B,mBACjE7D,EADiE,KAC1DuH,EAD0D,OAEhD3J,IAAMiG,SAAS,IAFiC,mBAEjE/E,EAFiE,KAE3D0I,EAF2D,KAGlErD,EAAevG,IAAMwG,SA2B3B,OAzBAxG,IAAMyG,WAAU,WACdkD,EAAS,IACTC,EAAQ,MACP,CAACtH,EAAQqH,EAAUC,IAEtB5J,IAAMyG,WAAU,WACd,IAAMC,EAAOC,SAAShB,cAAc,yBACpCY,EAAaO,QAAU,IAAIlE,EAAUiD,EAAkBa,GACvDH,EAAaO,QAAQC,qBACpB,IAiBD,kBAAC,EAAD,CACE3E,MAAM,gEACNf,KAAK,WACLgB,WAAYgE,EACZ/D,OAAQA,EACRC,QAVJ,WACEgE,EAAaO,QAAQE,cACrBzE,KASEC,SAfJ,SAAsByE,GACpBA,EAAElD,iBACFtC,EAAWW,EAAOlB,KAehB,2BACEoG,MAAOlF,EACPmF,SAzBN,SAA0BN,GACxB0C,EAAS1C,EAAEO,OAAOF,QAyBdjG,KAAK,QACL1B,UAAU,uCACVyB,KAAK,OACLqI,YAAY,mDACZvC,UAAQ,EACRC,UAAU,IACVC,UAAU,KACVC,aAAa,QAEf,0BAAM1H,UAAU,yCAChB,2BACE2H,MAAOpG,EACPqG,SAnCN,SAAyBN,GACvB2C,EAAQ3C,EAAEO,OAAOF,QAmCbjG,KAAK,OACL1B,UAAU,sCACVyB,KAAK,MACL8F,UAAQ,EACRuC,YAAY,qGACZpC,aAAa,QAEf,0BAAM1H,UAAU,0CCvCPkK,MAxBf,YAAuD,IAA/BvH,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QAASuH,EAAa,EAAbA,UAAa,EACJ9J,IAAMiG,SAAS,gBADX,mBAC7CI,EAD6C,KAC3BC,EAD2B,KAYpD,OAJAtG,IAAMyG,WAAU,WACdH,EAAoB,kBACnB,CAAChE,EAAQgE,IAGV,kBAAC,EAAD,CACElE,MAAM,2DACNf,KAAK,UACLgB,WAAYgE,EACZ/D,OAAQA,EACRC,QAASA,EACTC,SAhBJ,SAAsByE,GACpBX,EAAoB,uDACpBW,EAAElD,iBACF+F,QCCWC,MARf,YAAgC,IAAXC,EAAU,EAAVA,QACbrK,EAAS,iCAAgD,IAAlBqK,EAAQ1I,QAAgB,gBACrE,OACE,yBAAK3B,UAAWA,GACd,uBAAGA,UAAU,kBAAkBqK,KCqMtBC,MA7Lf,WAAgB,IAAD,EAC+CjK,IAAMiG,UAAS,GAD9D,mBACNiE,EADM,KACkBC,EADlB,OAEyCnK,IAAMiG,UAAS,GAFxD,mBAENmE,EAFM,KAEeC,EAFf,OAM6DrK,IAAMiG,SAAS,0DAN5E,mBAMNqE,EANM,KAMyBC,EANzB,OAQ6CvK,IAAMiG,UAAS,GAR5D,mBAQNuE,EARM,KAQiBC,EARjB,OASuCzK,IAAMiG,UAAS,GATtD,mBASNyE,EATM,KAScC,EATd,OAU2B3K,IAAMiG,SAAS,IAV1C,mBAUN2E,EAVM,KAUQC,EAVR,OAWqC7K,IAAMiG,SAAS,IAXpD,mBAWN6E,EAXM,KAWaC,EAXb,OAY2B/K,IAAMiG,SAAS,IAZ1C,mBAYNZ,EAZM,KAYQ2F,EAZR,OAcyBhL,IAAMiG,SAAS,IAdxC,mBAcN1F,EAdM,KAcO0K,EAdP,OAeajL,IAAMiG,SAAS,IAf5B,mBAeNtE,EAfM,KAeCuJ,EAfD,KAmFb,SAASC,KACPhB,GAA0B,GAC1BE,GAAuB,GACvBI,GAAyB,GACzBE,GAAsB,GACtBE,EAAgB,IAChBE,EAAqB,IAgDzB,OAvHE/K,IAAMyG,WAAU,WACd,IAEM2E,EAAe,CAFExD,EAAIyD,eACHzD,EAAI0D,iBAE5B3C,QAAQ4C,IAAIH,GACT7C,MAAK,YAAoB,IAAD,mBAAjBiD,EAAiB,KAAX7J,EAAW,KACvBsJ,EAAeO,GACfN,EAASvJ,QAEZ,IA+GH,kBAAC,EAAmB8J,SAApB,CAA6BnE,MAAO/G,GAClC,yBAAKZ,UAAU,OACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACE6B,cA5ER,WACE2I,GAA0B,IA4EpB1I,WAzER,WACE4I,GAAuB,IAyEjB3I,aAtER,WACE+I,GAAyB,IAsEnBrK,YAnER,SAAyBD,GACvB0K,EAAgB1K,IAmEVwB,MAAOA,EACPtB,WAvHR,SAAwBF,GACtB,IAAMU,EAAUV,EAAKW,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQJ,EAAYI,OAC3DiH,EAAI8D,qBAAqBvL,EAAKQ,IAAKE,GAChC0H,MAAK,SAACoD,GACL,IAAMC,EAAWjK,EAAMI,KAAI,SAAC8J,GAAD,OAAOA,EAAElL,MAAQR,EAAKQ,IAAMgL,EAAUE,KACjEX,EAASU,MAEVE,OAAM,SAACC,GACNf,EAAgB,+HAChBgB,YAAW,WAAKhB,EAAgB,MAAM,SA+GpC1K,aA3GR,SAA0BH,GACxBwK,GAAsB,GACtBI,EAAqB5K,MA2GjB,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEmC,OAAQ4H,EACR3H,QAAS4I,GACTnF,aA/DR,YAA4C,IAAhB3E,EAAe,EAAfA,KAAMS,EAAS,EAATA,MAChC8F,EAAIqE,kBAAkB5K,EAAMS,GACzByG,MAAK,SAACC,GACLyC,EAAezC,GACf2C,QAEDW,OAAM,SAACC,GACNf,EAAgB,yMAChBb,GAA0B,GAC1BA,GAA0B,GAC1B6B,YAAW,WAAKhB,EAAgB,MAAM,WAuDtC,kBAAC,EAAD,CACE1I,OAAQ8H,EACR/D,iBAAkBiE,EAClB/H,QAAS4I,GACT1J,WAxCV,SAA8BW,EAAOlB,GACnCqJ,EAAiC,mEACjC3C,EAAIsE,cAAc9J,EAAOlB,GACtBqH,MAAK,SAACC,GACL0C,EAAS,CAAC1C,GAAF,mBAAU7G,KAClBwJ,QAEDW,OAAM,SAACC,GACNf,EAAgB,+HAChBgB,YAAW,WAAKhB,EAAgB,MAAM,QAEvCmB,SAAQ,WACP5B,EAAiC,gEA8B/B,kBAAC,EAAD,CACEjI,OAAQkI,EACRjI,QAAS4I,GACT7B,eA3DV,SAA4BpI,GAC1B0G,EAAIwE,aAAa,CAAElL,KAAMA,IACtBqH,MAAK,SAACC,GACLyC,EAAezC,GACf2C,QAEDW,OAAM,SAACC,GACNf,EAAgB,gLAChBP,GAAyB,GACzBA,GAAyB,GACzBuB,YAAW,WAAKhB,EAAgB,MAAM,WAoDpC,kBAAC,EAAD,CACE1I,OAAQoI,EACRnI,QAAS4I,GACTrB,UA7HR,WACgBgB,EAAkBpK,MAAMC,MAAQJ,EAAYI,KAExDiH,EAAIyE,WAAWvB,EAAkBnK,KAC9B4H,MAAK,WACJ,IAAMqD,EAAWjK,EAAM2K,QAAO,SAACT,GAC7B,OAAQA,EAAElL,MAAQmK,EAAkBnK,OAEtCuK,EAASU,GACTT,QAEDW,OAAM,SAACC,GACNf,EAAgB,uJAChBL,GAAsB,GACtBA,GAAsB,GACtBqB,YAAW,WAAKhB,EAAgB,MAAM,WAiHxC,kBAAC,EAAD,CACE7K,KAAMyK,EACNrI,QAAS4I,KAEX,kBAAC,EAAD,CACEnB,QAAS3E,QCtLCkH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnG,SAASoG,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3E,MAAK,SAAA4E,GACJA,EAAaC,gBAEdtB,OAAM,SAAAuB,GACLC,QAAQD,MAAMA,EAAMrD,a,kBEzI5BuD,EAAOC,QAAU,IAA0B,wC,kBCA3CD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.71db83fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport logoPath from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\" >\r\n    <img className=\"logo\"  alt=\"Место в России\" src={logoPath}/> \r\n    </header>\r\n  );\r\n}\r\nexport default Header;","import React from 'react';\r\nconst CurrentUserContext=React.createContext();\r\nexport default CurrentUserContext;\r\n","import React from 'react';\r\nimport CurrentUserContext  from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\r\n  const currentUser= React.useContext(CurrentUserContext);\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `button card__delete-button ${isOwn ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`\r\n  );\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = `button card__like-button ${isLiked&& 'card__like-button_pressed'}`;\r\n    function handleClick(){\r\n        onCardClick(card);\r\n    }\r\n    function handleLike(){\r\n      onCardLike(card);\r\n  }\r\n  function handleDelete(){\r\n    onCardDelete(card);\r\n}\r\n    return (\r\n        <li className=\"card\">\r\n          <img src={card.link} alt=\"\" className=\"card__image\" onClick={handleClick}/>\r\n          <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleDelete}/>\r\n          <div className=\"card__caption\">\r\n            <h2 className=\"card__title\">{card.name}</h2>\r\n            <div className=\"card__like-container\">\r\n              <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLike}/>\r\n              <p className=\"card__like-counter\">{card.likes.length}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n    );\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport Card from './Card';\r\n\r\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <img src={currentUser.avatar} alt=\"фото профиля\" className=\"profile__avatar\" onClick={onEditAvatar} />\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n          <button className=\"button profile__edit-button\" type=\"button\" aria-label=\"Редактировать профиль\" onClick={onEditProfile} />\r\n          <p className=\"profile__occupation\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"button profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\r\n\r\n      </section>\r\n      <section>\r\n        <ul className=\"cards\">\r\n          {cards.map((item) => (\r\n            <Card\r\n              key={item._id}\r\n              card={item}\r\n              onCardClick={onCardClick}\r\n              onCardLike={onCardLike}\r\n              onCardDelete={onCardDelete} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\nexport default Main;\r\n","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n          <p className=\"footer__copyright\">&copy;2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport closeButtonPath from '../images/close-icon.svg';\r\n\r\nfunction PopupWithForm({ title, name, submitText, isOpen, onClose, onSubmit, children }) {\r\n  const className = `popup popup_type_${name} ${isOpen && 'popup_opened'}`;\r\n  return (\r\n    <div className={className}>\r\n      <form\r\n        name={name}\r\n        onSubmit={onSubmit}\r\n        className=\"popup__container popup__container_type_input\"\r\n        noValidate>\r\n        <p className=\"popup__text\">{title}</p>\r\n        {children}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button popup__save-button\">\r\n          {submitText}\r\n        </button>\r\n        <button\r\n          type=\"reset\"\r\n          className=\"button popup__close-button popup__close-button_type_input\"\r\n          onClick={onClose}>\r\n          <img src={closeButtonPath} alt=\"закрыть\" />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default PopupWithForm;\r\n","class Validator {\r\n\r\n  constructor(validationData, formElement) {\r\n    this._inputSelector = validationData.inputSelector;\r\n    this._submitButtonSelector = validationData.submitButtonSelector;\r\n    this._inactiveButtonClass = validationData.inactiveButtonClass;\r\n    this._inputErrorClass = validationData.inputErrorClass;\r\n    this._errorClass = validationData.errorClass;\r\n    this._formElement = formElement;\r\n  }\r\n\r\n  enableValidation() {\r\n    this._getInputList();\r\n    this._getSubmitButtonElement();\r\n    this._formElement.addEventListener('submit', (evt) => { evt.preventDefault() });\r\n    this._setEventListeners();\r\n  }\r\n\r\n  clearErrors() {\r\n    this._inputList.forEach((item) => { this._hideInputError(item); });\r\n    this._toggleSubmitButtonState(this._submitButton);\r\n  }\r\n\r\n  _toggleSubmitButtonState() {\r\n    if (this._hasInvalidInput(this._inputList)) {\r\n      this._buttonElement.classList.add(this._inactiveButtonClass);\r\n      this._buttonElement.setAttribute('disabled', true);\r\n    } else {\r\n      this._buttonElement.classList.remove(this._inactiveButtonClass);\r\n      this._buttonElement.removeAttribute('disabled');\r\n    }\r\n  }\r\n  _hasInvalidInput() {\r\n    if (this._inputList.some(item => !item.validity.valid)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  _checkInputValidity(inputElement) {\r\n    if (inputElement.validity.valid) {\r\n      this._hideInputError(inputElement);\r\n    } else {\r\n      this._showInputError(inputElement, inputElement.validationMessage);\r\n    }\r\n  }\r\n  _hideInputError(inputElement) {\r\n    const errorElement = this._getErrorElement(inputElement);\r\n    inputElement.classList.remove(this._inputErrorClass);\r\n    errorElement.classList.remove(this._errorClass);\r\n    errorElement.textContent = '';\r\n  }\r\n\r\n  _showInputError(inputElement, errorMessage) {\r\n    const errorElement = this._getErrorElement(inputElement);\r\n    inputElement.classList.add(this._inputErrorClass);\r\n    errorElement.classList.add(this._errorClass);\r\n    errorElement.textContent = errorMessage;\r\n  }\r\n  _getInputList() {\r\n    const inputList = Array.from(this._formElement.querySelectorAll(this._inputSelector));\r\n    this._inputList = inputList;\r\n    return this._inputList;\r\n  }\r\n  _getSubmitButtonElement() {\r\n    const buttonElement = this._formElement.querySelector(this._submitButtonSelector);\r\n    this._buttonElement = buttonElement;\r\n    return this._buttonElement;\r\n  }\r\n\r\n  _getErrorElement(inputElement) {\r\n    const errorElement = this._formElement.querySelector(`.popup__error_type_${inputElement.name}`);\r\n    return errorElement;\r\n  }\r\n\r\n  _setEventListeners() {\r\n    this._inputList.forEach((item) => {\r\n      item.addEventListener('input', () => {\r\n        this._checkInputValidity(item);\r\n        this._toggleSubmitButtonState();\r\n      });\r\n      item.addEventListener('focus', () => {\r\n        this._toggleSubmitButtonState();\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst validationConfig = {\r\n  formSelector: '.popup__container_type_input',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__save-button',\r\n  inactiveButtonClass: 'popup__save-button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\nexport { Validator, validationConfig };\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { Validator, validationConfig } from '../utils/Validator';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n  const [submitButtonText, setSubmitButtonText] = React.useState('Сохранить');\r\n  const validatorRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    const form = document.forms.edit;\r\n    validatorRef.current = new Validator(validationConfig, form);\r\n    validatorRef.current.enableValidation();\r\n  },[]);\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n    setSubmitButtonText('Сохранить');\r\n  }, [currentUser]);\r\n\r\n  React.useEffect(() => {\r\n    setSubmitButtonText('Сохранить');\r\n  }, [isOpen]);\r\n\r\n  function handleNameInput(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleDescriptionInput(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n  function handleSubmit(e) {\r\n    setSubmitButtonText('Сохранение...');\r\n    e.preventDefault();\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n  function handleClose() {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n    validatorRef.current.clearErrors();\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Редактировать профиль\"\r\n      name=\"edit\"\r\n      submitText={submitButtonText}\r\n      onClose={handleClose}\r\n      onSubmit={handleSubmit}\r\n      isOpen={isOpen}\r\n    >\r\n      <input\r\n        name=\"name\"\r\n        className=\"popup__input popup__input_type_name\"\r\n        type=\"text\"\r\n        required\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleNameInput}\r\n      />\r\n      <span className=\"popup__error popup__error_type_name\"></span>\r\n      <input\r\n        name=\"occupation\"\r\n        className=\"popup__input popup__input_type_occupation\"\r\n        type=\"text\"\r\n        required\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        autoComplete=\"off\"\r\n        value={description}\r\n        onChange={handleDescriptionInput}\r\n      />\r\n      <span className=\"popup__error popup__error_type_occupation\"></span>\r\n    </PopupWithForm>\r\n  )\r\n}\r\nexport default EditProfilePopup;\r\n","import React from 'react';\r\nimport closeButtonPath from '../images/close-icon.svg';\r\n\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n  const className = `popup popup_type_image ${(Object.keys(card).length !== 0) && 'popup_opened'}`;\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"popup__container popup__container_type_picture\">\r\n        <button\r\n          className=\"button popup__close-button popup__close-button_type_picture\"\r\n          type=\"reset\"\r\n          onClick={onClose}>\r\n          <img src={closeButtonPath} alt=\"закрыть\" />\r\n        </button>\r\n        <img src={card.link} alt=\"\" className=\"popup__image\" />\r\n        <p className=\"popup__subtitle\">{card.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ImagePopup;\r\n"," class Api {\r\n     constructor({ userURL, cardsURL, token }) {\r\n         this._userURL = userURL;\r\n         this._cardsURL = cardsURL;\r\n         this._token = token;\r\n     }\r\n     userDownload() {\r\n         return fetch(this._userURL, {\r\n                 method: 'GET',\r\n                 headers: {\r\n                     authorization: this._token\r\n                 }\r\n             })\r\n             .then((res) => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject(`Ошибка загрузки данных пользователя ${res.status}`);\r\n                 }\r\n             });\r\n     }\r\n\r\n\r\n     cardsDownload() {\r\n         return fetch(this._cardsURL, {\r\n                 method: 'GET',\r\n                 headers: {\r\n                     authorization: this._token\r\n                 }\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject(`Ошибка связи с сервером ${res.status}`);\r\n                 }\r\n\r\n             })\r\n     }\r\n\r\n\r\n     profileDataUpload(name, about) {\r\n         return fetch(this._userURL, {\r\n                 method: 'PATCH',\r\n                 headers: {\r\n                     authorization: this._token,\r\n                     'Content-Type': 'application/json',\r\n                 },\r\n                 body: JSON.stringify({\r\n                     name: name,\r\n                     about: about\r\n                 })\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject(`Ошибка загрузки данных пользователя на сервер ${res.status}`);\r\n                 }\r\n             })\r\n     }\r\n     newCardUpload(name, link) {\r\n         return fetch(this._cardsURL, {\r\n                 method: 'POST',\r\n                 headers: {\r\n                     authorization: this._token,\r\n                     'Content-Type': 'application/json',\r\n                 },\r\n                 body: JSON.stringify({\r\n                     name: name,\r\n                     link: link\r\n                 })\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject(`Ошибка загрузки карточки на сервер ${res.status}`);\r\n                 }\r\n             })\r\n     }\r\n\r\n     deleteCard(id) {\r\n         const cardDeleteURL = (this._cardsURL + `/${id}`);\r\n         return fetch(cardDeleteURL, {\r\n                 method: 'DELETE',\r\n                 headers: {\r\n                     authorization: this._token\r\n                 }\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject('Ошибка удаления карточки');\r\n                 }\r\n             })\r\n     }\r\n\r\n     changeLikeCardStatus(id, isLiked){\r\n       const cardLikeURL = (this._cardsURL + `/likes/${id}`);\r\n      if(isLiked){\r\n         return fetch(cardLikeURL, {\r\n                 method: 'DELETE',\r\n                 headers: {\r\n                     authorization: this._token\r\n                 }\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject('Ошибка связи с сервером');\r\n                 }\r\n             })\r\n     }else{\r\n      return fetch(cardLikeURL, {\r\n              method: 'PUT',\r\n              headers: {\r\n                  authorization: this._token\r\n              }\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                  return res.json();\r\n              } else {\r\n                  return Promise.reject('Ошибка связи с сервером');\r\n              }\r\n          })\r\n      }\r\n     }\r\n\r\n     avatarUpload(url) {\r\n         return fetch((this._userURL + `/avatar`), {\r\n                 method: 'PATCH',\r\n                 headers: {\r\n                     authorization: this._token,\r\n                     'Content-Type': 'application/json'\r\n                 },\r\n                 body: JSON.stringify({\r\n                     avatar: url.link,\r\n                 })\r\n             })\r\n             .then(res => {\r\n                 if (res.ok) {\r\n                     return res.json();\r\n                 } else {\r\n                     return Promise.reject('Ошибка загрузки аватара');\r\n                 }\r\n             })\r\n     }\r\n }\r\n\r\n const apiConfig = {\r\n     userURL: 'https://mesto.nomoreparties.co/v1/cohort-15/users/me',\r\n     cardsURL: 'https://mesto.nomoreparties.co/v1/cohort-15/cards',\r\n     token: 'e6bf7ea4-0157-47ee-b8f8-bf17d3b13ba1'\r\n }\r\n\r\n const api = new Api(apiConfig);\r\n export default api;\r\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { Validator, validationConfig } from '../utils/Validator';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  const avatarRef = React.useRef();\n  const validatorRef = React.useRef();\n  const [submitButtonText, setSubmitButtonText] = React.useState('Сохранить');\n\n  React.useEffect(() => {\n    setSubmitButtonText('Сохранить');\n  }, [isOpen, setSubmitButtonText]);\n\n  React.useEffect(() => {\n    const form = document.forms.avatar;\n    validatorRef.current = new Validator(validationConfig, form);\n    validatorRef.current.enableValidation();\n  }, []);\n\n  function handleSubmit(e) {\n    setSubmitButtonText('Сохранение...');\n    e.preventDefault();\n    onUpdateAvatar(avatarRef.current.value);\n  }\n  function handleClose() {\n    avatarRef.current = '';\n    validatorRef.current.clearErrors();\n    onClose();\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Обновить аватар\"\n      name=\"avatar\"\n      submitText={submitButtonText}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n      isOpen={isOpen}\n    >\n      <input\n        ref={avatarRef}\n        name=\"link\"\n        className=\"popup__input popup__input_type_link\"\n        type=\"url\"\n        required\n        placeholder=\"ссылка на картинку\"\n        autoComplete=\"off\"\n      />\n      <span className=\"popup__error popup__error_type_link\"></span>\n    </PopupWithForm>\n  )\n}\nexport default EditAvatarPopup;\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { Validator, validationConfig } from '../utils/Validator';\r\n\r\nfunction AddPlacePopup({ isOpen, submitButtonText, onClose, onAddPlace }) {\r\n  const [title, setTitle] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n  const validatorRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    setTitle('');\r\n    setLink('');\r\n  }, [isOpen, setTitle, setLink]);\r\n\r\n  React.useEffect(() => {\r\n    const form = document.querySelector('form[name=\"new-card\"]');\r\n    validatorRef.current = new Validator(validationConfig, form);\r\n    validatorRef.current.enableValidation();\r\n  }, []);\r\n\r\n  function handleTitleInput(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n  function handleLinkInput(e) {\r\n    setLink(e.target.value);\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace(title, link);\r\n  }\r\n  function handleClose() {\r\n    validatorRef.current.clearErrors();\r\n    onClose();\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Новое место\"\r\n      name=\"new-card\"\r\n      submitText={submitButtonText}\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        value={title}\r\n        onChange={handleTitleInput}\r\n        name=\"place\"\r\n        className=\"popup__input popup__input_type_place\"\r\n        type=\"text\"\r\n        placeholder=\"название\"\r\n        required\r\n        minLength=\"1\"\r\n        maxLength=\"30\"\r\n        autoComplete=\"off\"\r\n      />\r\n      <span className=\"popup__error popup__error_type_place\"></span>\r\n      <input\r\n        value={link}\r\n        onChange={handleLinkInput}\r\n        name=\"link\"\r\n        className=\"popup__input popup__input_type_link\"\r\n        type=\"url\"\r\n        required\r\n        placeholder=\"ссылка на картинку\"\r\n        autoComplete=\"off\"\r\n      />\r\n      <span className=\"popup__error popup__error_type_link\"></span>\r\n    </PopupWithForm>\r\n\r\n  )\r\n}\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmPopup({ isOpen, onClose, onConfirm }) {\r\n  const [submitButtonText, setSubmitButtonText] = React.useState('Да');\r\n\r\n  function handleSubmit(e) {\r\n    setSubmitButtonText('Удаление...');\r\n    e.preventDefault();\r\n    onConfirm();\r\n  }\r\n  React.useEffect(() => {\r\n    setSubmitButtonText('Да');\r\n  }, [isOpen, setSubmitButtonText]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Вы уверены?\"\r\n      name=\"confirm\"\r\n      submitText={submitButtonText}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n    </PopupWithForm>\r\n  )\r\n}\r\nexport default ConfirmPopup;\r\n","import React from 'react';\r\n\r\nfunction ErrorPopup({message}) {\r\n  const className = `popup popup_type_error ${(message.length !==0) && 'popup_opened'}`;\r\n  return (\r\n    <div className={className}>\r\n      <p className=\"popup__message\">{message}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default ErrorPopup;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/Api';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmPopup from './ConfirmPopup';\r\nimport ErrorPopup from './ErrorPopup';\r\n\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n\r\n  //Поднимаю стейт с текстом кнопки сабмита, чтобы иметь возможность возвратить ее в исходное\r\n  //состояние при ошибке загрузки новой карточки (не сбрасывая поля ввода на форме)\r\n  const [addPlacePopupSubmitButtonText, setAddPlacePopupSubmitButtonText] = React.useState('Сохранить');\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n  const [willBeDeletedCard, setWillBeDeletedCard] = React.useState({});\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n\r\n  React.useEffect(() => {\r\n    const userFromServer = api.userDownload();\r\n    const cardsFromServer = api.cardsDownload();\r\n    const dataDownload = [userFromServer, cardsFromServer];\r\n    Promise.all(dataDownload)\r\n      .then(([user, cards]) => {\r\n        setCurrentUser(user);\r\n        setCards(cards);\r\n      });\r\n  }, []);\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLikeCardStatus(card._id, isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessage('Ошибка связи с сервером');\r\n        setTimeout(()=>{setErrorMessage('')}, 2000);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    setIsConfirmPopupOpen(true);\r\n    setWillBeDeletedCard(card);\r\n  }\r\n\r\n  function handleDeleteCardConfirmation() {\r\n    const isOwn = willBeDeletedCard.owner._id === currentUser._id;\r\n    if (isOwn) {\r\n      api.deleteCard(willBeDeletedCard._id)\r\n        .then(() => {\r\n          const newCards = cards.filter((c) => {\r\n            return (c._id !== willBeDeletedCard._id);\r\n          });\r\n          setCards(newCards);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => {\r\n          setErrorMessage('Не удалось удалить карточку');\r\n          setIsConfirmPopupOpen(false); //Закрытие и повторное открытие окна сбрасывает\r\n          setIsConfirmPopupOpen(true);  // текст кнопки сабмита на исходный\r\n          setTimeout(()=>{setErrorMessage('')}, 2000);\r\n        });\r\n    }\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsConfirmPopupOpen(false);\r\n    setSelectedCard({});\r\n    setWillBeDeletedCard({});\r\n  }\r\n\r\n  function handleUpdateUser({ name, about }) {\r\n    api.profileDataUpload(name, about)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessage('Не удалось обновить данные на сервере')\r\n        setIsEditProfilePopupOpen(false);//Закрытие и повторное открытие окна сбрасывает\r\n        setIsEditProfilePopupOpen(true); // текст кнопки сабмита на исходный\r\n        setTimeout(()=>{setErrorMessage('')}, 2000);\r\n\r\n      });\r\n  }\r\n\r\nfunction handleUpdateAvatar(link) {\r\n  api.avatarUpload({ link: link })\r\n    .then((res) => {\r\n      setCurrentUser(res);\r\n      closeAllPopups();\r\n    })\r\n    .catch((err) => {\r\n      setErrorMessage('Не удалось обновить фото профиля');\r\n      setIsEditAvatarPopupOpen(false); //Закрытие и повторное открытие окна сбрасывает\r\n      setIsEditAvatarPopupOpen(true);  // текст кнопки сабмита на исходный\r\n      setTimeout(()=>{setErrorMessage('')}, 2000);\r\n    })\r\n}\r\n\r\nfunction handleAddPlaceSubmit(title, link) {\r\n  setAddPlacePopupSubmitButtonText('Сохранение...')\r\n  api.newCardUpload(title, link)\r\n    .then((res) => {\r\n      setCards([res, ...cards]);\r\n      closeAllPopups();\r\n    })\r\n    .catch((err) => {\r\n      setErrorMessage('Ошибка связи с сервером');\r\n      setTimeout(()=>{setErrorMessage('')}, 2000);\r\n    })\r\n    .finally(()=>{\r\n      setAddPlacePopupSubmitButtonText('Сохранить');\r\n    });\r\n}\r\n\r\nreturn (\r\n  <CurrentUserContext.Provider value={currentUser}>\r\n    <div className=\"App\">\r\n      <div className=\"body\">\r\n        <Header />\r\n        <Main\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onCardClick={handleCardClick}\r\n          cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n        />\r\n        <Footer />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser} />\r\n\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          submitButtonText={addPlacePopupSubmitButtonText}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit} />\r\n\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n\r\n        <ConfirmPopup\r\n          isOpen={isConfirmPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onConfirm={handleDeleteCardConfirmation}\r\n        />\r\n\r\n        <ImagePopup\r\n          card={selectedCard}\r\n          onClose={closeAllPopups}\r\n        />\r\n        <ErrorPopup\r\n          message={errorMessage}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  </CurrentUserContext.Provider>\r\n);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/close-icon.c2d0901f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}